{
	"info": {
		"_postman_id": "e5d713c9-dd34-47f5-93bb-4f901cdc74f4",
		"name": "Perl",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9769d518-acc2-454d-b389-c90048e8cf7d",
						"exec": [
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"});\r",
							"\r",
							"pm.test(\"response should have type and credit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"credit\");\r",
							"    pm.expect(jsonData.amount).to.eql(20);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "type",
							"value": "credit",
							"type": "text"
						},
						{
							"key": "amount",
							"value": "20",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:5000/transactions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b7dedb8-7e0b-4791-a167-99bc5e71b397",
						"exec": [
							"pm.test(\"response should be error\", function () {\r",
							"    pm.response.to.be.error;\r",
							"});\r",
							"\r",
							"pm.test(\"response should return error\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Transaction not allowed! You only have $ 20 available in your account.\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "type",
							"value": "debit",
							"type": "text"
						},
						{
							"key": "amount",
							"value": "30",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:5000/transactions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "transactions",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1444af0b-018a-477b-a8a4-bc945d7f1344",
						"exec": [
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"});\r",
							"\r",
							"pm.test(\"response should have type and credit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].type).to.eql(\"credit\");\r",
							"    pm.expect(jsonData[0].amount).to.eql(20);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "text/plain",
						"type": "text",
						"disabled": true
					}
				],
				"url": {
					"raw": "http://localhost:5000/transactions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"transactions"
					]
				}
			},
			"response": []
		},
		{
			"name": "transactions/id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e025b334-0ff9-436b-8aeb-fa1b429869df",
						"exec": [
							"pm.test(\"response should be okay to process\", function () {\r",
							"    pm.response.to.not.be.error;\r",
							"});\r",
							"\r",
							"pm.test(\"response should have type and credit\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.type).to.eql(\"credit\");\r",
							"    pm.expect(jsonData.amount).to.eql(20);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/transactions/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"transactions",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "transactions/id",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0ae01a71-721d-447e-822e-ecb82e4463cc",
						"exec": [
							"pm.test(\"response should be error\", function () {\r",
							"    pm.response.to.be.error;\r",
							"});\r",
							"\r",
							"pm.test(\"response should return error\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"The transaction id 35 doesn't exist!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/transactions/35",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"transactions",
						"35"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}